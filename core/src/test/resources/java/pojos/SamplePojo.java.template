package io.github.muehmar;

import java.util.Objects;
import java.util.Optional;
import java.util.function.BiFunction;
import java.util.function.Function;
import java.util.function.UnaryOperator;

public interface CustomerExtension {

  Integer getId();

  String getUsername();

  Optional<String> getNickname();

  default Customer withId(Integer id) {
    return new Customer(id, getUsername(), getNickname().orElse(null));
  }

  default Customer withUsername(String username) {
    return new Customer(getId(), username, getNickname().orElse(null));
  }

  default Customer withNickname(String nickname) {
    return new Customer(getId(), getUsername(), nickname);
  }

  default Customer withNickname(Optional<String> nickname) {
    return new Customer(getId(), getUsername(), nickname.orElse(null));
  }

  default <T> T map(Function<Customer, T> f) {
    final Customer self =
      new Customer(getId(), getUsername(), getNickname().orElse(null));
    return f.apply(self);
  }

  default Customer mapIf(boolean shouldMap, UnaryOperator<Customer> f) {
    final Customer self =
      new Customer(getId(), getUsername(), getNickname().orElse(null));
    return shouldMap ? f.apply(self) : self;
  }

  default <T> Customer mapIfPresent(Optional<T> value, BiFunction<Customer, T, Customer> f) {
    final Customer self =
      new Customer(getId(), getUsername(), getNickname().orElse(null));
    return value.map(v -> f.apply(self, v)).orElse(self);
  }

  default boolean genEquals(Object obj) {
    if (this == obj) return true;
    if (obj == null || this.getClass() != obj.getClass()) return false;
    final Customer other = (Customer) obj;
    return Objects.equals(getId(), other.getId())
        && Objects.equals(getUsername(), other.getUsername())
        && Objects.equals(getNickname(), other.getNickname());
  }

  default int genHashCode() {
    int result = Objects.hash(getId(), getUsername(), getNickname());
    return result;
  }

  default String genToString() {
    return "Customer{"
        + "id=" + getId()
        + ", username='" + getUsername() + '\''
        + ", nickname=" + getNickname()
        + '}';
  }
}